name: CI

on:
  push:
    branches:
      - main

jobs:
  test:
    if: 'contains(github.event.head_commit.message, ''Automatically generated changelog'') == false'
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Build and run tests
        run: |
          docker-compose -f docker-compose.test.yml up --build --abort-on-container-exit

  build:
    if: 'contains(github.event.head_commit.message, ''Automatically generated changelog'') == true'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        name: Checkout code 

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Log in to Docker Hub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and push Docker image to Docker Hub
        uses: docker/build-push-action@v2
        with:
          context: .
          file: ./Dockerfile
          push: true
          tags: ${{ secrets.DOCKERHUB_USERNAME }}/app:latest

  changelog:
    if: 'contains(github.event.head_commit.message, ''Automatically generated changelog'') == false'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        name: Checkout code 

      - name: Setup node.js
        uses: actions/setup-node@v2
        with:
          node-version: '21'

      - name: Install package
        run:
          npm install -g conventional-changelog-cli
      
      - name: Generate changelog
        run: |
          conventional-changelog -p eclipse -i CHANGELOG.md -s

      - name: Commit and push changelog
        run: |
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
          git add CHANGELOG.md
          git commit -m "Automatically generated changelog"
          git push
        env:
          GITHUB_TOKEN: ${{ secrets.ACTIONKEY }}
      
  release:
    if: 'contains(github.event.head_commit.message, ''Automatically generated changelog'') == true'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        name: Checkout code 

      - name: Create release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.ACTIONKEY }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          body: |
            Automatically generated changelog
          draft: false
          prerelease: false

  deploy:
    if: 'contains(github.event.head_commit.message, ''Automatically generated changelog'') == true'
    needs: build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        name: Checkout code 

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1

      - name: Install kubectl
        run: |
          curl -o kubectl https://amazon-eks.s3.us-west-2.amazonaws.com/1.21.2/2021-07-05/bin/linux/amd64/kubectl
          chmod +x ./kubectl
          sudo mv ./kubectl /usr/local/bin

      - name: Configure kubectl
        run: |
          aws eks --region us-east-1 update-kubeconfig --name stockapp
          
      - name: Apply Kubernetes configuration
        run: |
          kubectl apply -f etc/kubernetes/
          kubectl rollout restart deployment.apps/app