# Test workflow/pipeline (hereafter workflow)

name: CI

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the "main" branch, if branches are added, modify these?
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest
    
    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v3
      
      # Add needed dependencies or setup environments?

      # Test to see if runner is working
      - name: Run a one-line script
        run: echo Runner is working!

      ### Install dependencies
      #- name: Install dependecies
      #  run: |
      #    mvn install

      # Run tests, this should work with Surefire Plugin
      #- name: Run tests
      #  run: |
      #    mvn test
          
  merge-check:
    runs-on: ubuntu-latest
    if: github.event_name == 'pull_request'

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      # Add any necessary setup steps here
      
      # Ensure the branch is up-to-date with the main branch
      - name: Sync branch with main
        run: git fetch origin main && git merge origin/main --ff-only

      # Check if the merge would result in conflicts
      - name: Check for merge conflicts
        run: git diff --quiet || { echo "Merge conflict detected! Resolve conflicts before merging."; exit 1; }
